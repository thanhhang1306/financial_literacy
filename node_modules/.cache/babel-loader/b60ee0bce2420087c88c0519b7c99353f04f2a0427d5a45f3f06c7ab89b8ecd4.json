{"ast":null,"code":"import GameManager from \"../../core/gameManager\";\nconst handleHover = e => {\n  // Should not be able to draw cards when the game is not in the DRAW_CARDS state.\n  const gameManager = GameManager.getInstance();\n  if (gameManager.gameState !== GameManager.GAME_STATE.DRAW_CARDS) return;\n  const {\n    clientX,\n    clientY,\n    target\n  } = e;\n  const {\n    offsetWidth,\n    offsetHeight,\n    offsetLeft,\n    offsetTop\n  } = target;\n  const relativeX = (clientX - offsetLeft - offsetWidth / 2) / offsetWidth;\n  const relativeY = (clientY - offsetTop - 180 - offsetHeight / 2) / offsetHeight;\n  const rotateMagnitude = 11;\n  target.style.boxShadow = `${-relativeX * rotateMagnitude}px ${-relativeY * rotateMagnitude}px 20px rgba(0, 0, 0, 0.1)`;\n  target.style.transform = `rotateY(${relativeX * rotateMagnitude}deg)\n     rotateX(${relativeY * rotateMagnitude * -1}deg)\n     translateX(5px) translateY(-11px)\n     rotateZ(-1deg)\n     scale(1.03)`;\n};\nconst handleMouseLeave = e => {\n  // Behavior should not happen if game is not in the DRAW_CARDS state.\n  const gameManager = GameManager.getInstance();\n  if (gameManager.gameState !== GameManager.GAME_STATE.DRAW_CARDS) return;\n\n  // Reset the card's style to the default.\n  const {\n    target\n  } = e;\n  target.style.transform = \"translateX(5px) translateY(-11px) rotateZ(-1deg)\";\n  target.style.boxShadow = \"none\";\n};\nfunction handleCardClick(e) {\n  // Should not be able to draw cards when the game is not in the DRAW_CARDS state.\n  const gameManager = GameManager.getInstance();\n  if (gameManager.gameState !== GameManager.GAME_STATE.DRAW_CARDS) return;\n\n  // Flip each card on the table.\n  const cards = Array.from(e.target.parentElement.children);\n  e.target.parentElement.style.perspective = \"4000px\";\n  const translateSequence = [0, 220, 110];\n  for (let i = 0; i < 3; i++) {\n    cards[i].style.transition = `${0.6 + i * 0.22}s`;\n    setTimeout(() => {\n      _flipCard(cards[i], translateSequence[i]);\n    }, 0);\n  }\n\n  // e.target.parentElement.querySelector(\".summaryContainer\").style.display = \"block\";\n  e.target.parentElement.querySelector(\".summaryContainer\").style.transform = \"translateY(55%)\";\n\n  // Draw cards by accessing game manager.\n  const drawnCards = gameManager.drawCards();\n  console.log(drawnCards);\n  for (let i = 0; i < 3; i++) {\n    cards[i].querySelector(\".front\").innerHTML = drawnCards[i].description;\n    cards[i].addEventListener(\"click\", () => {\n      _toggleSelection(e, i);\n    });\n  }\n}\nfunction _updateSummary() {}\nfunction _toggleSelection(e, cardIndex) {\n  const gameManager = GameManager.getInstance();\n  gameManager.toggleSelection(cardIndex);\n  const cards = Array.from(e.target.parentElement.children);\n  const card = cards[cardIndex];\n  if (card.classList.contains(\"selected\")) {\n    card.classList.remove(\"selected\");\n  } else {\n    card.classList.add(\"selected\");\n  }\n  _updateSummary();\n}\nfunction _flipCard(element, translateX) {\n  element.style.transform = `translateX(${-210 + translateX}%) translateY(-50%) rotateY(180deg)`;\n  element.style.boxShadow = \"none\";\n}\nexport { handleHover, handleMouseLeave, handleCardClick };","map":{"version":3,"names":["GameManager","handleHover","e","gameManager","getInstance","gameState","GAME_STATE","DRAW_CARDS","clientX","clientY","target","offsetWidth","offsetHeight","offsetLeft","offsetTop","relativeX","relativeY","rotateMagnitude","style","boxShadow","transform","handleMouseLeave","handleCardClick","cards","Array","from","parentElement","children","perspective","translateSequence","i","transition","setTimeout","_flipCard","querySelector","drawnCards","drawCards","console","log","innerHTML","description","addEventListener","_toggleSelection","_updateSummary","cardIndex","toggleSelection","card","classList","contains","remove","add","element","translateX"],"sources":["/Users/hangpham/HackPrinceton/finance-app1/financial_literacy/src/components/Card/handles.js"],"sourcesContent":["import GameManager from \"../../core/gameManager\";\n\nconst handleHover = e => {\n  // Should not be able to draw cards when the game is not in the DRAW_CARDS state.\n  const gameManager = GameManager.getInstance();\n  if (gameManager.gameState !== GameManager.GAME_STATE.DRAW_CARDS) return;\n\n  const { clientX, clientY, target } = e;\n  const { offsetWidth, offsetHeight, offsetLeft, offsetTop } = target;\n  const relativeX= (clientX - offsetLeft - offsetWidth / 2) / offsetWidth;\n  const relativeY = (clientY - offsetTop - 180 - offsetHeight / 2) / offsetHeight;\n  const rotateMagnitude = 11;\n\n  target.style.boxShadow = `${-relativeX * rotateMagnitude}px ${-relativeY * rotateMagnitude}px 20px rgba(0, 0, 0, 0.1)`;\n  target.style.transform = \n    `rotateY(${relativeX * rotateMagnitude}deg)\n     rotateX(${relativeY * rotateMagnitude * -1}deg)\n     translateX(5px) translateY(-11px)\n     rotateZ(-1deg)\n     scale(1.03)`;\n}\n\nconst handleMouseLeave = e => {\n  // Behavior should not happen if game is not in the DRAW_CARDS state.\n  const gameManager = GameManager.getInstance();\n  if (gameManager.gameState !== GameManager.GAME_STATE.DRAW_CARDS) return;\n\n  // Reset the card's style to the default.\n  const { target } = e;\n  target.style.transform = \"translateX(5px) translateY(-11px) rotateZ(-1deg)\";\n  target.style.boxShadow = \"none\";\n}\n\nfunction handleCardClick(e) {\n  // Should not be able to draw cards when the game is not in the DRAW_CARDS state.\n  const gameManager = GameManager.getInstance();\n  if (gameManager.gameState !== GameManager.GAME_STATE.DRAW_CARDS) return;\n\n  // Flip each card on the table.\n  const cards = Array.from(e.target.parentElement.children);\n\n  e.target.parentElement.style.perspective = \"4000px\";\n  const translateSequence = [0, 220, 110];\n  for (let i=0; i<3; i++) {\n    cards[i].style.transition = `${0.6 + i*0.22}s`;\n    setTimeout(() => {\n      _flipCard(cards[i], translateSequence[i]);\n    }, 0);\n  }\n\n  // e.target.parentElement.querySelector(\".summaryContainer\").style.display = \"block\";\n  e.target.parentElement.querySelector(\".summaryContainer\").style.transform = \"translateY(55%)\";\n\n  // Draw cards by accessing game manager.\n  const drawnCards = gameManager.drawCards();\n  console.log(drawnCards);\n\n  for (let i=0; i<3; i++) {\n    cards[i].querySelector(\".front\").innerHTML = drawnCards[i].description;\n    cards[i].addEventListener(\"click\", () => {_toggleSelection(e, i)});      \n  }\n  \n  \n}\n\nfunction _updateSummary() {\n\n}\n\nfunction _toggleSelection(e, cardIndex) {\n  const gameManager = GameManager.getInstance();\n  gameManager.toggleSelection(cardIndex);\n  const cards = Array.from(e.target.parentElement.children);\n  const card = cards[cardIndex];\n  if (card.classList.contains(\"selected\")) {\n    card.classList.remove(\"selected\");\n  }\n  else {\n    card.classList.add(\"selected\");\n  }\n  _updateSummary();\n}\n\nfunction _flipCard(element, translateX) {\n  element.style.transform = `translateX(${-210 + translateX}%) translateY(-50%) rotateY(180deg)`;\n  element.style.boxShadow = \"none\";\n}\n\nexport { handleHover, handleMouseLeave, handleCardClick };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}